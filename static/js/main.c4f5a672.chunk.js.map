{"version":3,"sources":["Net.tsx","App.tsx","index.tsx"],"names":["Net","width","qty","linesA","linesB","i","push","strokeWidth","stroke","points","App","React","useState","name","color","paths","setPaths","curPath","setCurPath","formX","setFormX","formY","setFormY","code","setCode","addPoint","x","y","cpaths","useEffect","map","path","coordsArray","undefined","endPoint","point","join","style","position","right","zIndex","value","onChange","e","parseFloat","target","type","onClick","setEndpoint","slice","length","delPoint","margin","height","scale","evt","layerX","layerY","star","id","toString","radius","fill","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4f5a672.chunk.js","sourcesContent":["import React from 'react';\nimport { Layer, Line } from 'react-konva';\n\n// eslint-disable-next-line react/prop-types\nconst Net: React.FC<{ width: number; qty: number }> = ({ width, qty }) => {\n  const linesA = [];\n  const linesB = [];\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0; i < qty / width; i++) {\n    linesA.push(\n      <Line\n        strokeWidth={0.01}\n        stroke=\"black\"\n        points={[i * width, 0, i * width, qty]}\n      />,\n    );\n\n    linesB.push(\n      <Line\n        strokeWidth={0.01}\n        stroke=\"black\"\n        points={[0, i * width, qty, i * width]}\n      />,\n    );\n  }\n\n  return (\n    <Layer>\n      {linesA}\n      {linesB}\n    </Layer>\n  );\n};\n\nexport default Net;\n","import React, { useEffect } from 'react';\nimport {\n  Stage, Layer, Line, Circle,\n} from 'react-konva';\nimport Konva from 'konva';\nimport Net from './Net';\n\nexport interface Point {\n  x: number,\n  y: number,\n}\n\nexport interface Path {\n  name: string,\n  color: string,\n  points: Point[],\n  endPoint?: Point\n}\n\nconst App = () => {\n  const [paths, setPaths] = React.useState<Path[]>([\n    { name: 'Дрон 1', color: '#000', points: [] },\n    { name: 'Дрон 2', color: '#F00', points: [] },\n    { name: 'Дрон 3', color: '#00F', points: [] },\n  ]);\n  const [curPath, setCurPath] = React.useState(0);\n  const [formX, setFormX] = React.useState('');\n  const [formY, setFormY] = React.useState('');\n  const [code, setCode] = React.useState('');\n\n  const addPoint = (x: number, y: number) => {\n    const cpaths = [...paths];\n    cpaths[curPath] = { ...cpaths[curPath], points: [...cpaths[curPath].points, { x, y }] };\n\n    setPaths(cpaths);\n  };\n\n  const setEndpoint = (x: number, y: number) => {\n    const cpaths = [...paths];\n    cpaths[curPath] = { ...cpaths[curPath], endPoint: { x, y } };\n\n    setPaths(cpaths);\n  };\n\n  const addPointEvent = (e: Konva.KonvaEventObject<MouseEvent>) => {\n    // @ts-ignore\n    addPoint(e.evt.layerX / 100, e.evt.layerY / 100);\n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line array-callback-return\n    setCode(paths.map((path) => {\n      // eslint-disable-next-line max-len\n      const coordsArray = (path.endPoint !== undefined ? [...path.points, path.endPoint] : path.points)\n        .map((point) => (\n          `{${point.x}, ${point.y}, 2.0},`\n        )).join('\\n');\n\n      return `code\n${coordsArray}\ncodeend`;\n    }).join('\\n\\n\\n\\n'));\n  }, [paths]);\n\n  const delPoint = () => {\n    const cpaths = [...paths];\n    cpaths[curPath] = {\n      ...cpaths[curPath],\n      points: [...cpaths[curPath].points.slice(0, cpaths[curPath].points.length - 1)],\n    };\n\n    setPaths(cpaths);\n  };\n\n  return (\n    <>\n      <div style={{ position: 'absolute', right: 0, zIndex: 10000000 }}>\n        <select value={curPath} onChange={(e) => { setCurPath(parseFloat(e.target.value)); }}>\n          {paths.map((path, i) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <option key={i} value={i}>{path.name}</option>\n          ))}\n        </select>\n        <br />\n        <input type=\"text\" value={formX} onChange={((e) => { setFormX(e.target.value); })} />\n        <br />\n        <input type=\"text\" value={formY} onChange={((e) => { setFormY(e.target.value); })} />\n        <br />\n        <button type=\"button\" onClick={() => addPoint(parseFloat(formX), parseFloat(formY))}>add</button>\n        <button type=\"button\" onClick={() => setEndpoint(parseFloat(formX), parseFloat(formY))}>end point</button>\n        <button type=\"button\" onClick={() => { delPoint(); }}>delete</button>\n        <br />\n        <textarea value={code} />\n      </div>\n\n      <Stage style={{ margin: '10px' }} width={1000} height={1000} scale={{ x: 100, y: 100 }} onClick={addPointEvent}>\n        <Net width={1} qty={10} />\n        <Layer>\n          {paths.map((path) => (\n            (path.endPoint !== undefined ? [...path.points, path.endPoint] : path.points)\n              .map((star, i) => (\n                <>\n                  <Circle\n                    key={i.toString()}\n                    id={i.toString()}\n                    x={star.x}\n                    y={star.y}\n                    radius={0.1}\n                    fill={path.color}\n                  />\n                  {i > 0 && (\n                    <Line\n                      points={[path.points[i - 1].x, path.points[i - 1].y, star.x, star.y]}\n                      strokeWidth={0.05}\n                      stroke={path.color}\n                    />\n                  )}\n                </>\n              ))\n          ))}\n        </Layer>\n      </Stage>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}